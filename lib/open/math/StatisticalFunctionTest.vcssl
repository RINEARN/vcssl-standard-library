encode UTF-8;

import open.math.StatisticalFunction;
import Math;

/**
 * <p> open.math.StatisticalFunction のテストです。 </p>
 */


test();

void test(){
	testSumFloat();
	testSumVarfloat();
	testMeanFloat();
	testMeanVarfloat();
	testVaFloat();
	testVaVarfloat();
	testVanFloat();
	testVanVarfloat();
	testSdFloat();
	testSdVarfloat();
	testSdnFloat();
	testSdnVarfloat();

	println("open.math.StatisticalFunction: OK.");
}


/**
 * sum(...float[])のテストです。
 */
void testSumFloat(){
	float v1 = sum(1.0,2.1,3.2,4.3,5.4);
	float v2 =     1.0+2.1+3.2+4.3+5.4;
	assert(v1 == v2);
}

/**
 * sum(...varfloat[])のテストです。
 */
void testSumVarfloat(){
	digit(100);
	varfloat v1 = sum(1.0vf,2.1vf,3.2vf,4.3vf,5.4vf);
	varfloat v2 =     1.0vf+2.1vf+3.2vf+4.3vf+5.4vf;
	assert(v1 == v2);
}


/**
 * mean(...float[])のテストです。
 */
void testMeanFloat(){
	float v1 = mean(1.0,2.1,3.2,4.3,5.4);
	float v2 =     (1.0+2.1+3.2+4.3+5.4) / 5;
	assert(v1 == v2);
}

/**
 * mean(...varfloat[])のテストです。
 */
void testMeanVarfloat(){
	digit(100);
	varfloat v1 = mean(1.0vf,2.1vf,3.2vf,4.3vf,5.4vf);
	varfloat v2 =     (1.0vf+2.1vf+3.2vf+4.3vf+5.4vf) / 5v;
	assert(v1 == v2);
}


/**
 * va(...float[])のテストです。
 */
void testVaFloat(){
	float v1 = va(1.0,2.1,3.2,4.3,5.4);

	float m = (1.0+2.1+3.2+4.3+5.4) / 5;
	float v2 =((1.0-m)*(1.0-m)
			 + (2.1-m)*(2.1-m)
			 + (3.2-m)*(3.2-m)
			 + (4.3-m)*(4.3-m)
			 + (5.4-m)*(5.4-m)) / (5-1);
	assert(v1 == v2);
}

/**
 * va(...varfloat[])のテストです。
 */
void testVaVarfloat(){
	digit(100);
	float v1 = va(1.0vf,2.1vf,3.2vf,4.3vf,5.4vf);

	float m = (1.0vf+2.1vf+3.2vf+4.3vf+5.4vf) / 5v;
	float v2 =((1.0vf-m)*(1.0vf-m)
			 + (2.1vf-m)*(2.1vf-m)
			 + (3.2vf-m)*(3.2vf-m)
			 + (4.3vf-m)*(4.3vf-m)
			 + (5.4vf-m)*(5.4vf-m)) / (5v-1v);
	assert(v1 == v2);
}


/**
 * van(...float[])のテストです。
 */
void testVanFloat(){
	float v1 = van(1.0,2.1,3.2,4.3,5.4);

	float m = (1.0+2.1+3.2+4.3+5.4) / 5;
	float v2 =((1.0-m)*(1.0-m)
			 + (2.1-m)*(2.1-m)
			 + (3.2-m)*(3.2-m)
			 + (4.3-m)*(4.3-m)
			 + (5.4-m)*(5.4-m)) / 5;
	assert(v1 == v2);
}

/**
 * van(...varfloat[])のテストです。
 */
void testVanVarfloat(){
	digit(100);
	float v1 = van(1.0vf,2.1vf,3.2vf,4.3vf,5.4vf);

	float m = (1.0vf+2.1vf+3.2vf+4.3vf+5.4vf) / 5v;
	float v2 =((1.0vf-m)*(1.0vf-m)
			 + (2.1vf-m)*(2.1vf-m)
			 + (3.2vf-m)*(3.2vf-m)
			 + (4.3vf-m)*(4.3vf-m)
			 + (5.4vf-m)*(5.4vf-m)) / 5v;
	assert(v1 == v2);
}


/**
 * sd(...float[])のテストです。
 */
void testSdFloat(){
	float v1 = sd(1.0,2.1,3.2,4.3,5.4);

	float m = (1.0+2.1+3.2+4.3+5.4) / 5;
	float v2 =((1.0-m)*(1.0-m)
			 + (2.1-m)*(2.1-m)
			 + (3.2-m)*(3.2-m)
			 + (4.3-m)*(4.3-m)
			 + (5.4-m)*(5.4-m)) / (5-1);
	v2 = sqrt(v2);
	assert(v1 == v2);
}

/**
 * sd(...varfloat[])のテストです。
 */
void testSdVarfloat(){
	digit(100);
	float v1 = sd(1.0vf,2.1vf,3.2vf,4.3vf,5.4vf);

	float m = (1.0vf+2.1vf+3.2vf+4.3vf+5.4vf) / 5v;
	float v2 =((1.0vf-m)*(1.0vf-m)
			 + (2.1vf-m)*(2.1vf-m)
			 + (3.2vf-m)*(3.2vf-m)
			 + (4.3vf-m)*(4.3vf-m)
			 + (5.4vf-m)*(5.4vf-m)) / (5v-1v);
	v2 = sqrt(v2);
	assert(v1 == v2);
}

/**
 * sdn(...float[])のテストです。
 */
void testSdnFloat(){
	float v1 = sdn(1.0,2.1,3.2,4.3,5.4);

	float m = (1.0+2.1+3.2+4.3+5.4) / 5;
	float v2 =((1.0-m)*(1.0-m)
			 + (2.1-m)*(2.1-m)
			 + (3.2-m)*(3.2-m)
			 + (4.3-m)*(4.3-m)
			 + (5.4-m)*(5.4-m)) / 5;
	v2 = sqrt(v2);
	assert(v1 == v2);
}

/**
 * sdn(...varfloat[])のテストです。
 */
void testSdnVarfloat(){
	digit(100);
	float v1 = sdn(1.0vf,2.1vf,3.2vf,4.3vf,5.4vf);

	float m = (1.0vf+2.1vf+3.2vf+4.3vf+5.4vf) / 5v;
	float v2 =((1.0vf-m)*(1.0vf-m)
			 + (2.1vf-m)*(2.1vf-m)
			 + (3.2vf-m)*(3.2vf-m)
			 + (4.3vf-m)*(4.3vf-m)
			 + (5.4vf-m)*(5.4vf-m)) / 5v;
	v2 = sqrt(v2);
	assert(v1 == v2);
}

